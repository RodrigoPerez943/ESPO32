#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WiFi.h>
#include <NTPClient.h>
#include <WiFiUdp.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include <StateMachine.h>
#include <SpotifyArduinoCert.h>
#include <SpotifyArduino.h>
#include <WiFiClientSecure.h>
#include "AiEsp32RotaryEncoder.h"
#include <gfxfont.h>

// Definir el ancho y alto de la pantalla OLED
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

#define SCREEN_HEIGHT2 32

// 25 BOTON

// Definir pines de conexi√≥n para el ESP32
#define OLED_SDA 22
#define OLED_SCL 23

#define FRAME_WIDTH (64)
#define FRAME_HEIGHT (64)
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))

#define FRAME_DELAY2 (42)
#define FRAME_WIDTH2 (32)
#define FRAME_HEIGHT2 (32)
#define FRAME_COUNT2 (sizeof(frames2) / sizeof(frames2[0]))

#define ROTARY_ENCODER_A_PIN 27 //DT
#define ROTARY_ENCODER_B_PIN 26 // CLK
#define ROTARY_ENCODER_BUTTON_PIN 21 //SW
#define ROTARY_ENCODER_VCC_PIN -1
#define ROTARY_ENCODER_STEPS 4

const byte PROGMEM frames[][512] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,0,0,31,248,0,0,0,0,0,0,31,248,0,0,0,0,0,0,24,56,0,0,0,0,0,0,24,24,0,0,0,0,0,0,24,24,0,0,0,0,2,0,56,28,0,64,0,0,7,128,56,28,1,224,0,0,15,192,56,28,3,240,0,0,31,224,112,30,7,248,0,0,60,121,240,15,158,60,0,0,120,63,224,7,252,30,0,0,240,31,128,1,248,15,0,0,112,4,0,0,32,14,0,0,120,0,0,0,0,30,0,0,56,0,0,0,0,28,0,0,28,0,0,0,0,56,0,0,14,0,0,0,0,112,0,0,14,0,0,0,0,112,0,0,7,0,0,0,0,224,0,0,14,0,15,240,0,96,0,0,14,0,31,248,0,112,0,0,12,0,126,126,0,48,0,0,28,0,240,15,0,56,0,0,252,0,224,7,0,63,0,31,248,1,192,3,128,31,248,31,224,3,128,1,192,7,248,28,0,3,128,1,192,0,56,24,0,3,128,1,192,0,24,24,0,3,0,0,192,0,24,24,0,3,0,0,192,0,24,24,0,3,128,1,192,0,24,28,0,3,128,1,192,0,56,31,224,3,128,1,192,7,248,31,248,1,192,3,128,31,248,0,252,0,224,7,0,63,0,0,28,0,240,15,0,56,0,0,12,0,126,126,0,48,0,0,14,0,31,248,0,112,0,0,14,0,15,240,0,96,0,0,7,0,0,0,0,224,0,0,14,0,0,0,0,112,0,0,30,0,0,0,0,112,0,0,28,0,0,0,0,56,0,0,56,0,0,0,0,28,0,0,120,0,0,0,0,30,0,0,112,4,0,0,32,14,0,0,224,31,0,0,248,15,0,0,112,63,224,7,252,14,0,0,56,255,240,15,159,28,0,0,31,224,112,14,7,248,0,0,15,192,56,28,3,240,0,0,7,128,56,28,1,224,0,0,2,0,56,28,0,64,0,0,0,0,24,24,0,0,0,0,0,0,24,24,0,0,0,0,0,0,24,56,0,0,0,0,0,0,31,248,0,0,0,0,0,0,31,248,0,0,0,0,0,0,7,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,248,0,0,0,0,0,0,15,252,0,0,0,0,0,0,12,28,0,0,0,0,0,0,28,28,0,0,0,0,0,0,28,28,0,0,0,0,3,128,28,12,0,0,0,0,7,192,24,12,0,96,0,0,15,224,24,12,1,240,0,0,30,240,120,14,3,248,0,0,56,63,248,15,207,156,0,0,112,31,224,7,254,30,0,0,112,15,0,0,252,15,0,0,56,0,0,0,112,7,0,0,56,0,0,0,0,14,0,0,28,0,0,0,0,14,0,0,14,0,0,0,0,28,0,0,14,0,0,0,0,56,0,0,7,0,0,0,0,112,0,0,7,0,0,0,0,112,0,0,14,0,15,240,0,96,0,0,14,0,31,248,0,112,0,0,12,0,126,126,0,48,0,0,60,0,240,15,0,56,0,31,252,0,224,7,0,56,0,31,248,1,192,3,128,31,192,30,0,3,128,1,128,31,248,24,0,3,128,1,192,1,252,24,0,3,128,1,192,0,24,24,0,3,0,0,192,0,24,24,0,3,0,0,192,0,24,24,0,3,128,1,192,0,24,63,192,3,128,1,192,0,24,31,248,3,128,1,192,0,248,3,248,1,192,3,128,31,248,0,28,0,224,7,0,63,240,0,28,0,240,15,0,60,0,0,12,0,126,126,0,48,0,0,14,0,31,248,0,112,0,0,14,0,7,240,0,96,0,0,14,0,0,0,0,224,0,0,30,0,0,0,0,224,0,0,28,0,0,0,0,112,0,0,56,0,0,0,0,112,0,0,112,0,0,0,0,56,0,0,240,0,0,0,0,28,0,0,224,12,0,0,0,28,0,0,240,63,0,0,240,14,0,0,120,127,224,7,248,14,0,0,57,241,240,31,254,28,0,0,31,192,112,31,15,120,0,0,15,128,112,24,7,240,0,0,6,0,48,24,3,224,0,0,0,0,48,56,0,192,0,0,0,0,48,56,0,0,0,0,0,0,56,56,0,0,0,0,0,0,56,48,0,0,0,0,0,0,63,240,0,0,0,0,0,0,31,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,252,0,0,0,0,0,0,7,252,0,0,0,0,0,0,14,12,0,0,0,0,0,0,14,14,0,0,0,0,1,128,12,14,0,0,0,0,3,192,12,14,0,0,0,0,7,224,28,14,0,32,0,0,15,240,28,14,0,240,0,0,30,120,124,6,1,248,0,0,56,31,248,7,135,252,0,0,112,15,240,7,255,158,0,0,56,7,0,0,254,15,0,0,56,0,0,0,56,7,0,0,28,0,0,0,0,7,0,0,14,0,0,0,0,15,0,0,14,0,0,0,0,14,0,0,7,0,0,0,0,28,0,0,3,0,0,0,0,56,0,0,7,0,0,0,0,112,0,0,14,0,15,224,0,112,0,0,14,0,31,248,0,112,0,0,12,0,126,126,0,48,0,15,252,0,240,15,0,56,0,31,248,1,224,7,0,56,0,31,192,1,192,3,128,30,0,24,0,1,128,1,192,31,224,24,0,3,128,1,192,15,248,24,0,3,0,0,192,0,252,24,0,3,0,0,192,0,24,56,0,3,0,0,192,0,24,62,0,3,128,1,192,0,24,31,240,3,128,1,192,0,24,7,248,1,128,1,128,0,24,0,120,1,192,3,128,7,248,0,28,0,224,7,0,63,248,0,28,0,240,15,0,63,192,0,12,0,126,126,0,48,0,0,14,0,31,252,0,112,0,0,14,0,7,240,0,96,0,0,30,0,0,0,0,224,0,0,28,0,0,0,0,224,0,0,56,0,0,0,0,224,0,0,112,0,0,0,0,112,0,0,240,0,0,0,0,112,0,0,224,0,0,0,0,56,0,1,224,28,0,0,0,28,0,0,240,127,0,0,224,28,0,0,113,255,224,7,240,14,0,0,63,225,224,31,248,28,0,0,31,128,96,62,30,120,0,0,15,0,96,56,15,240,0,0,4,0,112,56,7,224,0,0,0,0,112,48,3,192,0,0,0,0,112,112,0,128,0,0,0,0,112,112,0,0,0,0,0,0,112,112,0,0,0,0,0,0,63,224,0,0,0,0,0,0,63,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,128,0,0,0,0,0,0,3,254,0,0,0,0,0,0,7,254,0,0,0,0,0,0,7,254,0,0,0,0,0,0,6,6,0,0,0,0,1,192,14,6,0,0,0,0,3,224,14,6,0,0,0,0,7,240,14,7,0,0,0,0,15,120,12,7,0,48,0,0,30,60,124,7,0,248,0,0,56,15,252,7,131,252,0,0,56,7,224,3,231,206,0,0,28,3,0,0,255,15,0,0,28,0,0,0,60,7,0,0,14,0,0,0,24,3,128,0,14,0,0,0,0,7,128,0,7,0,0,0,0,15,0,0,3,128,0,0,0,14,0,0,3,128,0,0,0,28,0,0,7,0,0,0,0,56,0,0,14,0,15,240,0,112,0,0,14,0,31,252,0,112,0,1,252,0,126,62,0,48,0,31,252,0,240,15,0,56,0,31,248,0,224,7,0,56,0,24,0,1,192,3,128,24,0,24,0,1,128,1,192,31,128,24,0,3,128,1,192,31,248,24,0,3,0,0,192,3,252,56,0,3,0,0,192,0,60,56,0,3,0,0,192,0,28,31,192,3,128,1,192,0,24,15,248,3,128,1,192,0,24,0,248,3,128,1,128,0,24,0,24,1,192,3,128,0,56,0,28,0,224,7,128,31,248,0,28,0,240,15,0,63,248,0,12,0,124,126,0,60,0,0,14,0,31,248,0,112,0,0,14,0,7,224,0,96,0,0,28,0,0,0,0,224,0,0,56,0,0,0,1,192,0,0,112,0,0,0,1,192,0,0,224,0,0,0,0,224,0,1,224,0,0,0,0,112,0,1,192,24,0,0,0,112,0,1,224,60,0,0,0,56,0,0,240,255,0,0,192,56,0,0,115,231,192,7,224,28,0,0,63,193,224,63,240,28,0,0,31,0,224,62,60,120,0,0,12,0,224,48,30,240,0,0,0,0,224,112,15,224,0,0,0,0,224,112,7,192,0,0,0,0,96,96,3,128,0,0,0,0,96,224,0,0,0,0,0,0,96,224,0,0,0,0,0,0,127,224,0,0,0,0,0,0,127,192,0,0,0,0,0,0,1,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,0,0,0,0,3,254,0,0,0,0,0,0,3,255,0,0,0,0,0,0,3,143,0,0,0,0,0,0,7,7,0,0,0,0,0,224,7,3,0,0,0,0,3,240,7,3,0,0,0,0,7,248,6,3,0,0,0,0,15,60,14,3,0,16,0,0,30,14,126,3,0,120,0,0,28,7,252,3,128,252,0,0,28,3,224,3,227,254,0,0,12,1,0,0,255,143,0,0,14,0,0,0,63,7,128,0,7,0,0,0,28,3,128,0,7,0,0,0,0,3,128,0,3,128,0,0,0,7,128,0,3,128,0,0,0,15,0,0,3,128,0,0,0,14,0,0,7,0,0,0,0,28,0,0,6,0,15,224,0,56,0,0,14,0,63,252,0,112,0,15,252,0,126,62,0,48,0,31,252,0,240,15,0,56,0,28,0,1,224,7,128,56,0,24,0,1,192,3,128,24,0,24,0,1,128,1,192,24,0,24,0,3,128,1,192,31,192,24,0,3,128,1,192,15,248,56,0,3,0,0,192,1,252,63,128,3,0,0,192,0,28,31,240,3,128,1,192,0,24,3,248,3,128,1,192,0,24,0,56,3,128,1,128,0,24,0,24,1,192,3,128,0,24,0,28,1,224,7,128,1,248,0,28,0,240,15,0,63,248,0,12,0,124,126,0,63,240,0,14,0,63,252,0,112,0,0,28,0,15,240,0,96,0,0,56,0,0,0,0,224,0,0,112,0,0,0,1,192,0,0,224,0,0,0,1,192,0,1,192,0,0,0,1,192,0,1,192,0,0,0,0,224,0,1,192,56,0,0,0,224,0,0,224,252,0,0,0,112,0,0,241,255,0,0,128,48,0,0,127,199,192,7,192,56,0,0,63,1,192,63,240,56,0,0,28,0,192,126,120,120,0,0,0,0,192,112,60,240,0,0,0,0,192,96,31,224,0,0,0,0,192,224,15,192,0,0,0,0,192,224,7,128,0,0,0,0,192,192,0,0,0,0,0,0,241,192,0,0,0,0,0,0,255,192,0,0,0,0,0,0,127,192,0,0,0,0,0,0,3,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,1,255,0,0,0,0,0,0,1,255,128,0,0,0,0,0,3,135,128,0,0,0,0,96,3,131,128,0,0,0,1,240,3,131,128,0,0,0,3,248,3,3,128,0,0,0,7,188,7,3,128,0,0,0,15,30,7,3,128,0,0,0,28,15,126,3,128,24,0,0,28,3,254,3,192,124,0,0,14,1,224,1,225,254,0,0,14,0,0,0,255,239,0,0,7,0,0,0,63,135,0,0,7,0,0,0,30,3,128,0,3,128,0,0,0,1,192,0,3,128,0,0,0,3,192,0,3,128,0,0,0,7,128,0,3,128,0,0,0,15,0,0,7,0,0,0,0,30,0,0,14,0,15,240,0,28,0,15,254,0,63,252,0,56,0,31,252,0,126,126,0,48,0,31,248,0,240,15,0,56,0,28,0,1,224,7,128,56,0,24,0,1,192,3,128,24,0,24,0,3,128,1,192,24,0,24,0,3,128,1,192,30,0,56,0,3,128,1,192,31,192,63,0,3,0,1,192,3,248,31,224,3,0,0,192,0,124,3,248,3,128,1,192,0,28,0,120,3,128,1,192,0,24,0,24,1,128,1,128,0,24,0,24,1,192,3,128,0,24,0,28,1,224,7,128,0,56,0,28,0,240,15,0,63,248,0,12,0,126,62,0,63,248,0,28,0,63,252,0,127,240,0,56,0,15,240,0,96,0,0,112,0,0,0,0,224,0,0,240,0,0,0,1,192,0,1,224,0,0,0,1,192,0,3,192,0,0,0,1,192,0,3,128,0,0,0,1,192,0,1,192,120,0,0,0,224,0,0,225,252,0,0,0,224,0,0,231,255,0,0,0,112,0,0,127,135,128,7,192,112,0,0,62,1,192,127,224,56,0,0,24,1,192,127,240,120,0,0,0,1,192,224,120,240,0,0,0,1,192,224,61,224,0,0,0,1,192,192,31,192,0,0,0,1,193,192,15,0,0,0,0,1,193,192,6,0,0,0,0,1,193,128,0,0,0,0,0,1,255,128,0,0,0,0,0,0,255,128,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,255,128,0,0,0,0,0,1,207,128,0,0,0,0,112,1,193,128,0,0,0,0,248,1,129,128,0,0,0,3,252,3,129,128,0,0,0,7,158,3,129,128,0,0,0,15,15,7,1,128,0,0,0,14,7,255,1,128,0,0,0,14,3,254,1,192,28,0,0,6,1,240,1,224,126,0,0,7,0,0,0,251,255,0,0,3,0,0,0,63,199,0,0,3,128,0,0,31,3,128,0,3,128,0,0,12,1,192,0,1,192,0,0,0,1,192,0,3,128,0,0,0,3,192,0,3,128,0,0,0,7,128,0,7,0,0,0,0,15,0,7,254,0,15,224,0,30,0,15,254,0,31,248,0,60,0,31,252,0,124,126,0,56,0,28,0,0,240,15,0,56,0,28,0,1,224,7,128,56,0,28,0,1,192,3,128,24,0,24,0,3,128,1,128,24,0,24,0,3,128,1,192,24,0,62,0,3,128,1,192,31,0,31,192,3,0,1,192,15,224,7,240,3,0,0,192,3,248,0,248,3,0,1,192,0,124,0,56,3,128,1,192,0,24,0,24,1,128,1,128,0,24,0,24,1,192,3,128,0,56,0,28,1,224,7,0,0,56,0,28,0,240,15,0,0,56,0,28,0,126,126,0,63,248,0,60,0,63,248,0,127,240,0,120,0,7,240,0,127,224,0,240,0,0,0,0,224,0,1,224,0,0,0,1,192,0,3,192,0,0,0,1,192,0,3,128,0,0,0,3,128,0,3,128,32,0,0,1,128,0,1,192,248,0,0,1,192,0,0,227,252,0,0,0,192,0,0,255,255,0,0,0,224,0,0,126,15,128,15,128,96,0,0,56,3,128,127,192,112,0,0,0,3,128,255,224,112,0,0,0,3,128,224,240,240,0,0,0,3,129,192,121,224,0,0,0,3,129,192,63,192,0,0,0,3,129,128,31,0,0,0,0,3,131,128,14,0,0,0,0,3,227,128,0,0,0,0,0,1,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,0,0,0,0,0,0,0,255,192,0,0,0,0,16,0,239,192,0,0,0,0,120,0,192,192,0,0,0,0,252,1,192,192,0,0,0,3,254,1,192,192,0,0,0,7,143,3,128,192,0,0,0,15,7,131,129,192,0,0,0,6,3,255,1,192,0,0,0,7,1,255,1,192,12,0,0,7,0,224,1,240,62,0,0,3,128,0,0,248,255,0,0,3,128,0,0,127,247,0,0,1,128,0,0,31,195,128,0,1,192,0,0,14,1,192,0,1,192,0,0,0,1,192,0,3,128,0,0,0,1,224,0,7,128,0,0,0,3,192,0,7,0,0,0,0,7,128,15,254,0,15,224,0,15,0,15,254,0,63,252,0,30,0,31,248,0,124,126,0,60,0,28,0,0,240,15,0,56,0,28,0,0,224,7,128,56,0,24,0,1,192,3,128,24,0,24,0,1,128,1,128,24,0,28,0,3,128,1,192,24,0,31,128,3,0,0,192,30,0,15,224,3,0,0,192,31,128,1,248,3,0,0,192,7,240,0,120,3,0,1,192,1,248,0,56,3,128,1,192,0,60,0,24,1,128,1,128,0,24,0,24,1,192,3,128,0,24,0,28,1,224,7,128,0,56,0,28,0,240,15,0,0,56,0,60,0,126,62,0,31,248,0,120,0,63,252,0,127,240,0,240,0,15,240,0,127,240,1,224,0,0,0,0,224,0,3,192,0,0,0,1,192,0,7,128,0,0,0,3,192,0,3,128,0,0,0,3,128,0,3,128,96,0,0,3,128,0,1,195,248,0,0,1,128,0,0,239,252,0,0,1,192,0,0,255,31,0,0,1,192,0,0,124,7,128,7,0,224,0,0,48,3,128,255,128,224,0,0,0,3,0,255,192,112,0,0,0,3,1,225,224,240,0,0,0,3,1,128,241,224,0,0,0,3,3,128,127,192,0,0,0,3,3,128,63,0,0,0,0,3,3,0,30,0,0,0,0,3,231,0,8,0,0,0,0,3,255,0,0,0,0,0,0,0,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,127,224,0,0,0,0,24,0,119,224,0,0,0,0,124,0,224,224,0,0,0,0,254,0,224,224,0,0,0,3,239,1,192,224,0,0,0,7,135,129,192,224,0,0,0,7,3,135,128,224,0,0,0,7,1,255,128,224,0,0,0,3,0,255,0,224,0,0,0,3,128,96,0,224,14,0,0,1,128,0,0,248,127,0,0,1,192,0,0,127,255,0,0,1,192,0,0,31,227,128,0,0,192,0,0,15,129,192,0,1,192,0,0,0,1,192,0,3,192,0,0,0,0,224,0,3,128,0,0,0,1,224,15,255,0,0,0,0,3,192,15,254,0,15,224,0,7,128,15,254,0,63,252,0,15,0,12,0,0,124,62,0,30,0,28,0,0,240,15,0,56,0,28,0,1,224,7,128,56,0,24,0,1,192,3,128,24,0,24,0,1,128,1,128,24,0,31,0,3,128,1,192,24,0,15,192,3,128,1,192,28,0,3,240,3,0,0,192,30,0,0,120,3,0,0,192,15,192,0,56,3,128,1,192,3,248,0,56,3,128,1,192,0,248,0,24,3,128,1,128,0,24,0,24,1,192,3,128,0,24,0,28,1,224,7,128,0,56,0,28,0,240,15,0,0,56,0,120,0,124,62,0,0,48,0,240,0,31,252,0,127,240,1,224,0,7,240,0,127,240,3,192,0,0,0,0,255,240,7,128,0,0,0,1,192,0,7,0,0,0,0,3,192,0,3,128,0,0,0,3,128,0,3,129,240,0,0,3,0,0,1,199,248,0,0,3,128,0,0,255,252,0,0,3,128,0,0,252,31,0,0,1,128,0,0,112,15,0,6,1,192,0,0,0,7,0,255,0,192,0,0,0,7,1,255,128,224,0,0,0,7,1,193,192,224,0,0,0,7,3,129,225,224,0,0,0,7,3,128,247,192,0,0,0,7,7,0,127,0,0,0,0,7,7,0,62,0,0,0,0,7,238,0,24,0,0,0,0,7,254,0,0,0,0,0,0,0,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,63,224,0,0,0,0,28,0,127,240,0,0,0,0,126,0,112,112,0,0,0,0,255,0,96,112,0,0,0,3,231,128,224,96,0,0,0,7,131,128,192,96,0,0,0,3,1,199,192,96,0,0,0,3,128,255,192,96,0,0,0,3,128,127,128,96,0,0,0,1,192,32,0,224,2,0,0,1,192,0,0,120,31,0,0,0,192,0,0,60,127,0,0,0,224,0,0,31,255,128,0,0,224,0,0,15,225,192,0,1,192,0,0,3,1,192,0,3,128,0,0,0,0,224,7,131,128,0,0,0,0,224,15,255,0,0,0,0,1,224,15,254,0,15,240,0,3,192,12,0,0,31,252,0,7,128,12,0,0,124,62,0,15,0,28,0,0,240,15,0,28,0,28,0,1,224,7,128,56,0,24,0,1,192,3,128,24,0,30,0,1,128,1,128,24,0,31,128,3,128,1,192,24,0,3,224,3,128,0,192,28,0,0,248,3,0,0,192,28,0,0,56,3,0,0,192,31,0,0,56,3,128,1,192,15,192,0,56,3,128,1,192,1,248,0,24,1,128,1,128,0,120,0,24,1,192,3,128,0,24,0,28,1,224,7,0,0,56,0,120,0,240,15,0,0,56,0,240,0,124,126,0,0,48,1,224,0,31,248,0,0,112,3,192,0,15,224,0,255,240,7,128,0,0,0,0,255,240,7,0,0,0,0,1,193,224,7,0,0,0,0,3,192,0,3,128,192,0,0,7,128,0,3,135,224,0,0,7,0,0,1,255,248,0,0,7,0,0,0,254,60,0,0,3,0,0,0,248,30,0,0,3,128,0,0,64,6,0,12,3,128,0,0,0,6,1,254,1,192,0,0,0,6,3,255,1,192,0,0,0,6,3,227,128,192,0,0,0,6,7,1,193,224,0,0,0,14,7,1,231,192,0,0,0,14,6,0,255,0,0,0,0,14,14,0,126,0,0,0,0,15,252,0,56,0,0,0,0,7,252,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,0,0,4,0,31,224,0,0,0,0,30,0,63,240,0,0,0,0,127,0,56,240,0,0,0,0,255,128,112,48,0,0,0,3,227,128,112,48,0,0,0,3,129,192,224,112,0,0,0,3,128,231,224,112,0,0,0,1,192,127,192,112,0,0,0,1,192,127,128,112,0,0,0,1,192,0,0,112,0,0,0,0,224,0,0,120,7,0,0,0,224,0,0,60,63,0,0,0,224,0,0,30,255,128,0,0,224,0,0,15,241,192,0,1,192,0,0,7,193,192,0,3,192,0,0,0,0,224,7,255,128,0,0,0,0,224,15,255,0,0,0,0,0,240,15,254,0,15,224,0,1,224,12,0,0,63,248,0,3,192,12,0,0,124,62,0,15,128,28,0,0,240,15,0,30,0,28,0,1,224,7,128,60,0,30,0,1,192,3,128,24,0,31,128,3,128,1,128,24,0,7,224,3,128,1,192,24,0,1,248,3,128,1,192,28,0,0,120,3,0,0,192,28,0,0,56,3,0,0,192,30,0,0,56,3,0,1,192,31,128,0,56,3,128,1,192,7,224,0,24,1,128,1,128,1,248,0,24,1,192,3,128,0,120,0,56,1,224,7,0,0,56,0,120,0,240,15,0,0,56,1,224,0,124,62,0,0,48,3,192,0,31,248,0,0,48,7,128,0,7,240,0,126,112,15,0,0,0,0,0,255,240,7,0,0,0,0,1,255,224,7,0,0,0,0,3,192,0,3,131,192,0,0,7,128,0,3,143,240,0,0,7,0,0,1,255,248,0,0,6,0,0,1,248,60,0,0,7,0,0,0,192,30,0,0,7,0,0,0,0,14,0,0,3,128,0,0,0,14,1,254,3,128,0,0,0,14,3,254,1,128,0,0,0,14,7,231,1,192,0,0,0,12,7,3,129,192,0,0,0,12,14,1,199,192,0,0,0,12,14,1,255,0,0,0,0,15,28,0,254,0,0,0,0,15,252,0,120,0,0,0,0,7,248,0,32,0,0,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,6,0,31,224,0,0,0,0,31,0,31,248,0,0,0,0,127,128,56,248,0,0,0,0,251,192,56,56,0,0,0,1,225,192,112,56,0,0,0,1,128,224,112,56,0,0,0,1,192,119,224,56,0,0,0,0,192,127,224,48,0,0,0,0,224,63,192,48,0,0,0,0,224,0,0,48,0,0,0,0,224,0,0,112,0,0,0,0,96,0,0,60,7,128,0,0,112,0,0,30,127,128,0,0,224,0,0,15,255,192,0,1,192,0,0,7,225,192,7,227,128,0,0,1,0,224,7,255,128,0,0,0,0,224,15,255,0,0,0,0,0,112,14,0,0,15,240,0,0,240,14,0,0,31,248,0,1,224,28,0,0,124,126,0,7,192,28,0,0,240,15,0,15,0,30,0,0,224,7,0,30,0,31,0,1,192,3,128,28,0,7,192,1,128,1,128,24,0,3,240,3,128,1,192,24,0,0,248,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,1,192,28,0,0,56,3,0,1,192,30,0,0,56,3,128,1,192,15,128,0,24,1,128,1,128,3,224,0,56,1,192,3,128,0,248,0,120,1,224,7,0,0,56,0,240,0,240,15,0,0,56,3,192,0,126,62,0,0,48,7,128,0,63,248,0,0,48,15,0,0,15,240,0,0,112,14,0,0,0,0,0,255,240,7,0,0,0,0,1,255,224,7,1,128,0,0,3,199,224,3,143,192,0,0,7,128,0,3,255,224,0,0,15,0,0,1,254,120,0,0,14,0,0,1,224,60,0,0,6,0,0,0,0,28,0,0,7,0,0,0,0,12,0,0,7,0,0,0,0,12,3,252,7,0,0,0,0,12,7,254,3,0,0,0,0,28,7,207,3,128,0,0,0,28,14,7,3,128,0,0,0,28,12,3,135,128,0,0,0,28,28,1,223,128,0,0,0,30,24,1,254,0,0,0,0,31,248,0,248,0,0,0,0,7,240,0,96,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,15,224,0,0,0,0,31,128,15,248,0,0,0,0,127,192,28,252,0,0,0,0,249,192,28,28,0,0,0,1,224,224,56,28,0,0,0,0,192,112,48,24,0,0,0,0,224,123,240,24,0,0,0,0,224,63,224,56,0,0,0,0,96,31,224,56,0,0,0,0,96,0,0,56,0,0,0,0,112,0,0,56,0,0,0,0,112,0,0,60,1,0,0,0,112,0,0,30,31,128,0,0,224,0,0,15,255,192,3,193,192,0,0,7,253,192,7,255,128,0,0,3,192,224,7,255,128,0,0,0,0,224,14,15,0,0,0,0,0,112,14,0,0,15,240,0,0,112,14,0,0,31,252,0,0,240,28,0,0,124,126,0,3,224,28,0,0,240,15,0,7,192,31,0,0,224,7,0,15,0,7,192,1,192,3,128,30,0,3,224,3,128,1,128,24,0,0,248,3,128,1,192,24,0,0,56,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,0,192,28,0,0,56,3,128,1,192,28,0,0,56,3,128,1,192,31,0,0,56,1,128,1,192,7,192,0,120,1,192,3,128,3,240,0,240,0,224,7,0,0,248,3,224,0,240,15,0,0,56,7,128,0,126,62,0,0,56,15,0,0,63,248,0,0,48,14,0,0,15,240,0,0,112,14,0,0,0,0,0,248,96,7,0,0,0,0,1,255,224,7,7,128,0,0,3,255,224,3,191,192,0,0,3,128,192,3,255,240,0,0,15,0,0,1,240,120,0,0,14,0,0,0,128,60,0,0,14,0,0,0,0,28,0,0,14,0,0,0,0,28,0,0,6,0,0,0,0,28,7,248,6,0,0,0,0,24,7,252,7,0,0,0,0,24,15,254,7,0,0,0,0,24,28,14,3,0,0,0,0,56,28,7,7,128,0,0,0,56,56,3,159,0,0,0,0,62,56,1,254,0,0,0,0,31,240,1,248,0,0,0,0,3,240,0,224,0,0,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,7,128,7,192,0,0,0,0,31,192,7,248,0,0,0,0,127,192,14,124,0,0,0,0,248,224,28,28,0,0,0,0,224,112,28,12,0,0,0,0,224,112,56,28,0,0,0,0,96,63,248,28,0,0,0,0,112,31,240,28,0,0,0,0,112,31,224,28,0,0,0,0,112,0,0,24,0,0,0,0,48,0,0,24,0,0,0,0,56,0,0,60,0,0,0,0,112,0,0,30,3,128,3,0,224,0,0,7,63,192,3,249,192,0,0,3,255,192,7,255,128,0,0,3,248,224,7,63,128,0,0,1,128,224,6,0,0,0,0,0,0,112,14,0,0,15,240,0,0,112,12,0,0,31,248,0,0,112,28,0,0,124,126,0,1,240,31,0,0,240,15,0,3,224,15,128,0,224,7,128,15,128,3,224,1,192,3,128,31,0,0,240,3,128,1,192,28,0,0,120,3,128,1,192,24,0,0,56,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,0,192,28,0,0,56,3,128,1,192,28,0,0,56,3,128,1,192,30,0,0,56,3,128,1,192,15,128,0,248,1,192,3,128,7,192,1,224,0,224,7,0,1,240,7,192,0,240,15,0,0,120,15,0,0,124,126,0,0,56,14,0,0,63,248,0,0,48,14,0,0,15,224,0,0,112,14,0,0,0,0,0,0,112,7,1,0,0,0,1,254,224,7,31,192,0,0,3,255,224,3,255,192,0,0,7,159,192,3,248,240,0,0,15,0,0,1,192,120,0,0,30,0,0,0,0,56,0,0,28,0,0,0,0,24,0,0,12,0,0,0,0,24,0,0,14,0,0,0,0,56,7,248,14,0,0,0,0,56,15,248,14,0,0,0,0,56,31,252,6,0,0,0,0,48,28,14,7,0,0,0,0,48,56,14,7,0,0,0,0,120,56,7,31,0,0,0,0,127,112,3,254,0,0,0,0,31,224,3,248,0,0,0,0,7,224,1,224,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,1,0,0,0,0,0,7,192,3,192,0,0,0,0,31,224,7,248,0,0,0,0,126,224,7,126,0,0,0,0,120,112,14,30,0,0,0,0,96,112,14,6,0,0,0,0,112,56,28,14,0,0,0,0,112,31,248,14,0,0,0,0,48,31,248,12,0,0,0,0,48,15,240,12,0,0,0,0,56,0,0,28,0,0,0,0,56,0,0,28,0,0,0,0,56,0,0,28,0,0,0,0,120,0,0,30,0,0,3,224,224,0,0,7,7,192,3,255,192,0,0,3,255,192,7,255,128,0,0,1,255,224,7,7,128,0,0,1,224,224,6,0,0,0,0,0,0,96,14,0,0,15,240,0,0,112,12,0,0,31,248,0,0,48,30,0,0,126,126,0,0,120,15,128,0,240,15,0,1,240,3,192,1,224,7,128,3,192,1,240,1,192,3,128,15,128,0,120,3,128,1,192,30,0,0,56,3,128,1,192,28,0,0,56,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,0,192,28,0,0,56,3,128,1,192,28,0,0,56,3,128,1,192,28,0,0,120,3,128,1,192,30,0,1,240,1,192,3,128,15,128,3,192,0,224,7,0,3,192,15,0,0,240,15,0,1,240,30,0,0,126,126,0,0,120,12,0,0,31,248,0,0,48,14,0,0,15,240,0,0,112,14,0,0,0,0,0,0,112,7,7,128,0,0,1,224,224,7,255,128,0,0,3,255,224,3,255,192,0,0,7,255,192,3,224,224,0,0,15,7,192,0,0,120,0,0,30,0,0,0,0,56,0,0,28,0,0,0,0,56,0,0,28,0,0,0,0,56,0,0,28,0,0,0,0,48,15,240,12,0,0,0,0,48,31,248,12,0,0,0,0,112,31,248,14,0,0,0,0,112,56,28,14,0,0,0,0,112,112,14,14,0,0,0,0,120,112,14,30,0,0,0,0,126,224,7,126,0,0,0,0,31,192,3,248,0,0,0,0,3,192,3,192,0,0,0,0,0,128,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,3,224,1,224,0,0,0,0,31,224,3,248,0,0,0,0,62,112,3,254,0,0,0,0,56,56,7,31,0,0,0,0,48,56,14,7,0,0,0,0,48,28,14,7,0,0,0,0,56,31,252,6,0,0,0,0,56,15,248,14,0,0,0,0,56,7,248,14,0,0,0,0,24,0,0,14,0,0,0,0,24,0,0,12,0,0,0,0,56,0,0,28,0,0,1,192,120,0,0,14,0,0,3,252,224,0,0,15,0,192,3,255,192,0,0,7,159,192,7,31,192,0,0,3,255,224,7,1,128,0,0,1,252,224,14,0,0,0,0,0,0,96,14,0,0,15,224,0,0,112,14,0,0,31,248,0,0,48,15,128,0,126,126,0,0,56,7,192,0,240,15,0,0,248,1,224,1,224,7,0,1,240,0,248,1,192,3,128,7,192,0,56,3,128,1,192,15,128,0,24,3,128,1,192,30,0,0,56,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,0,192,28,0,0,56,3,128,1,192,28,0,0,120,3,128,1,192,24,0,1,240,3,128,1,128,28,0,7,224,1,192,3,128,31,0,15,128,0,224,7,0,7,128,30,0,0,240,15,0,3,224,28,0,0,124,62,0,0,240,12,0,0,31,252,0,0,112,14,0,0,7,240,0,0,112,14,0,0,0,0,0,0,112,7,127,128,0,0,1,128,224,7,255,128,0,0,3,248,224,3,249,192,0,0,7,255,192,0,0,240,0,0,15,63,192,0,0,112,0,0,30,3,128,0,0,56,0,0,60,0,0,0,0,48,0,0,24,0,0,0,0,112,0,0,24,0,0,0,0,112,31,224,28,0,0,0,0,112,31,240,28,0,0,0,0,96,63,248,28,0,0,0,0,224,112,56,12,0,0,0,0,224,112,28,12,0,0,0,0,248,224,28,30,0,0,0,0,127,192,14,254,0,0,0,0,31,192,7,248,0,0,0,0,7,128,7,224,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,0,0,0,7,240,0,224,0,0,0,0,31,240,1,248,0,0,0,0,63,56,3,254,0,0,0,0,56,56,3,159,0,0,0,0,56,28,7,7,128,0,0,0,24,12,14,3,0,0,0,0,24,15,222,7,0,0,0,0,28,7,252,7,0,0,0,0,28,7,248,6,0,0,0,0,28,0,0,14,0,0,0,0,28,0,0,14,0,0,0,128,60,0,0,14,0,0,1,248,120,0,0,14,0,0,3,255,240,0,0,15,0,0,3,191,192,0,0,7,131,192,7,7,128,0,0,3,255,224,7,0,0,0,0,1,255,224,14,0,0,0,0,0,240,96,14,0,0,15,240,0,0,112,15,0,0,63,248,0,0,112,7,192,0,126,62,0,0,56,1,224,0,240,15,0,0,56,0,240,0,224,7,0,0,248,0,120,1,192,3,128,3,224,0,24,1,128,1,192,7,192,0,56,3,128,1,192,31,0,0,56,3,128,1,192,28,0,0,56,3,0,0,192,28,0,0,56,3,0,0,192,28,0,0,56,3,128,1,192,28,0,0,248,3,128,1,192,24,0,3,224,3,128,1,128,24,0,15,128,1,192,3,128,30,0,31,0,1,224,7,0,15,0,28,0,0,240,15,0,7,192,28,0,0,124,126,0,1,224,12,0,0,63,252,0,0,240,14,0,0,15,240,0,0,112,14,31,0,0,0,0,0,112,7,255,128,0,0,0,0,224,7,255,128,0,0,3,224,224,3,1,192,0,0,7,253,192,0,0,224,0,0,15,255,192,0,0,112,0,0,30,15,128,0,0,112,0,0,60,1,0,0,0,112,0,0,56,0,0,0,0,96,0,0,56,0,0,0,0,224,31,224,56,0,0,0,0,224,63,224,24,0,0,0,0,224,127,240,24,0,0,0,0,192,112,56,24,0,0,0,1,224,224,56,28,0,0,0,0,249,192,28,28,0,0,0,0,127,128,28,124,0,0,0,0,31,128,15,248,0,0,0,0,7,0,15,192,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,0,0,0,0,7,240,0,96,0,0,0,0,31,248,0,248,0,0,0,0,31,28,1,254,0,0,0,0,24,28,3,223,0,0,0,0,28,14,3,135,128,0,0,0,28,14,7,1,128,0,0,0,28,7,238,3,128,0,0,0,12,7,254,3,0,0,0,0,12,3,252,7,0,0,0,0,12,0,0,7,0,0,0,0,28,0,0,6,0,0,1,224,60,0,0,14,0,0,1,254,120,0,0,14,0,0,3,255,240,0,0,7,0,0,3,135,192,0,0,3,128,0,7,1,128,0,0,1,199,224,7,0,0,0,0,1,255,224,14,0,0,0,0,0,255,240,15,0,0,15,240,0,0,112,7,128,0,31,248,0,0,112,3,224,0,126,62,0,0,56,0,240,0,240,15,0,0,56,0,120,0,224,7,0,0,120,0,56,1,192,3,128,0,248,0,24,1,128,1,128,3,224,0,56,3,128,1,192,15,128,0,56,3,128,1,192,30,0,0,56,3,0,0,192,28,0,0,56,3,128,0,192,28,0,0,248,3,128,0,192,28,0,3,240,3,128,1,192,28,0,15,192,1,128,1,128,24,0,31,0,1,192,3,128,28,0,28,0,0,224,7,128,30,0,28,0,0,240,15,0,15,0,28,0,0,124,126,0,7,192,12,0,0,31,252,0,1,224,14,0,0,15,240,0,0,240,15,255,0,0,0,0,0,112,7,255,128,0,0,0,0,224,7,227,192,0,0,1,0,224,0,1,192,0,0,7,241,192,0,0,224,0,0,15,255,192,0,0,112,0,0,30,127,128,0,0,96,0,0,60,7,128,0,0,224,0,0,120,0,0,0,0,224,0,0,48,0,0,0,0,192,63,192,48,0,0,0,1,192,127,224,48,0,0,0,1,192,255,224,56,0,0,0,1,192,224,112,56,0,0,0,1,225,192,112,56,0,0,0,1,251,128,56,56,0,0,0,0,127,128,24,120,0,0,0,0,31,0,31,248,0,0,0,0,6,0,15,224,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,0,0,0,0,7,248,0,32,0,0,0,0,15,252,0,120,0,0,0,0,14,28,0,254,0,0,0,0,12,14,1,255,0,0,0,0,12,14,1,199,192,0,0,0,14,7,3,129,192,0,0,0,14,7,231,1,192,0,0,0,14,3,254,3,128,0,0,0,14,1,254,3,128,0,0,0,14,0,0,3,0,0,0,224,30,0,0,7,0,0,0,252,60,0,0,7,0,0,1,255,240,0,0,7,0,0,3,143,224,0,0,7,0,0,3,131,192,0,0,7,128,0,7,0,0,0,0,3,192,0,7,0,0,0,0,1,255,224,15,0,0,0,0,0,255,240,7,128,0,7,240,0,124,112,3,192,0,31,252,0,0,112,1,224,0,124,62,0,0,48,0,120,0,240,15,0,0,56,0,56,1,224,7,128,0,56,0,24,1,192,3,128,0,120,0,24,1,128,1,192,1,248,0,56,3,128,1,192,7,224,0,56,3,128,1,192,31,128,0,56,3,0,0,192,30,0,0,120,3,0,0,192,24,0,1,248,3,128,1,192,28,0,7,224,3,128,1,192,24,0,31,128,1,128,1,128,24,0,30,0,1,192,3,128,24,0,28,0,0,224,7,128,60,0,28,0,0,240,15,0,30,0,12,0,0,124,62,0,15,128,12,0,0,31,248,0,3,192,14,126,0,15,224,0,1,224,15,255,0,0,0,0,0,240,7,255,128,0,0,0,0,224,0,3,192,0,0,0,0,224,0,1,192,0,0,7,193,192,0,0,224,0,0,15,241,192,0,0,224,0,0,31,255,128,0,0,224,0,0,60,31,0,0,0,224,0,0,120,3,0,0,1,192,0,0,112,0,0,0,1,192,127,192,112,0,0,0,1,128,127,192,112,0,0,0,3,128,255,224,112,0,0,0,3,129,192,224,48,0,0,0,3,227,128,112,48,0,0,0,0,255,128,112,48,0,0,0,0,127,0,56,240,0,0,0,0,30,0,63,240,0,0,0,0,4,0,31,224,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,7,252,0,0,0,0,0,0,15,254,0,56,0,0,0,0,14,14,0,126,0,0,0,0,14,6,0,255,0,0,0,0,6,7,1,231,192,0,0,0,6,3,1,193,192,0,0,0,6,3,227,128,192,0,0,0,6,3,255,1,192,0,0,0,6,1,254,1,192,0,0,64,14,0,4,3,128,0,0,248,30,0,0,3,128,0,0,254,60,0,0,3,0,0,1,255,248,0,0,7,0,0,3,131,224,0,0,7,0,0,3,128,192,0,0,3,128,0,7,0,0,0,0,1,192,0,7,0,0,0,0,1,193,224,7,128,0,0,0,0,255,240,3,192,0,15,240,0,255,240,1,224,0,63,248,0,0,48,0,240,0,124,62,0,0,48,0,56,0,240,15,0,0,56,0,28,1,224,7,128,0,56,0,24,1,192,3,128,0,24,0,24,1,128,1,128,0,120,0,56,3,128,1,192,1,248,0,56,3,0,1,192,15,192,0,56,3,0,0,192,31,0,0,248,3,0,0,192,28,0,3,224,3,128,1,192,28,0,31,128,3,128,1,192,24,0,30,0,1,128,1,128,24,0,24,0,1,192,3,128,24,0,28,0,0,224,7,128,56,0,28,0,0,240,15,0,28,0,12,0,0,126,62,0,15,0,12,0,0,31,248,0,7,128,15,254,0,7,240,0,3,192,15,255,0,0,0,0,1,224,7,3,128,0,0,0,0,224,0,3,192,0,0,0,0,224,0,1,192,0,0,3,1,192,0,0,224,0,0,15,225,192,0,0,224,0,0,31,255,128,0,0,192,0,0,60,127,0,0,1,192,0,0,120,31,0,0,1,192,48,0,224,2,0,0,3,128,127,128,96,0,0,0,3,128,255,192,96,0,0,0,3,1,199,192,96,0,0,0,7,131,128,224,96,0,0,0,3,231,128,224,112,0,0,0,0,255,0,96,112,0,0,0,0,126,0,112,112,0,0,0,0,28,0,127,240,0,0,0,0,0,0,63,224,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,7,254,0,0,0,0,0,0,7,238,0,24,0,0,0,0,7,7,0,62,0,0,0,0,7,7,0,127,0,0,0,0,7,3,128,247,192,0,0,0,7,3,129,225,224,0,0,0,7,1,225,192,224,0,0,0,7,1,255,128,224,0,0,0,7,0,255,1,192,0,0,112,7,0,6,1,192,0,0,254,31,0,0,1,128,0,0,255,252,0,0,3,128,0,1,199,248,0,0,3,128,0,3,129,240,0,0,3,0,0,3,128,0,0,0,3,128,0,7,0,0,0,0,3,192,0,7,128,0,0,0,1,192,0,3,192,0,0,0,0,255,240,1,224,0,15,224,0,127,240,0,240,0,63,252,0,127,240,0,120,0,124,62,0,0,48,0,28,0,240,15,0,0,56,0,28,1,224,7,128,0,56,0,24,1,192,3,128,0,24,0,24,1,128,1,128,0,24,0,56,3,128,1,192,0,248,0,56,3,128,1,192,3,240,0,248,3,0,0,192,15,192,3,240,3,0,0,192,30,0,31,192,3,128,1,192,28,0,31,0,3,128,1,192,24,0,24,0,1,128,1,192,24,0,24,0,1,192,3,128,24,0,28,0,1,224,7,128,56,0,28,0,0,240,15,0,56,0,12,0,0,124,62,0,30,0,15,254,0,63,248,0,15,0,15,254,0,15,224,0,7,128,15,255,0,0,0,0,3,192,0,3,128,0,0,0,1,224,0,3,128,0,0,0,0,224,0,1,192,0,0,0,1,192,0,0,192,0,0,15,129,192,0,1,192,0,0,31,227,128,0,1,192,0,0,127,255,0,0,3,128,0,0,248,63,0,0,3,128,96,0,224,14,0,0,3,0,255,0,224,0,0,0,7,1,255,128,224,0,0,0,7,3,135,128,224,0,0,0,7,135,129,192,224,0,0,0,3,239,1,192,224,0,0,0,0,254,0,224,224,0,0,0,0,124,0,224,224,0,0,0,0,24,0,119,224,0,0,0,0,0,0,127,224,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,0,0,0,3,255,0,0,0,0,0,0,3,231,0,8,0,0,0,0,3,3,0,30,0,0,0,0,3,3,128,63,0,0,0,0,3,3,128,127,192,0,0,0,3,1,192,241,224,0,0,0,3,1,193,224,240,0,0,0,3,128,255,192,96,0,0,48,3,128,255,128,224,0,0,124,15,128,7,0,224,0,0,255,31,0,0,1,192,0,0,239,252,0,0,1,192,0,1,195,248,0,0,3,128,0,3,128,96,0,0,3,128,0,3,128,0,0,0,3,128,0,7,128,0,0,0,1,192,0,3,192,0,0,0,1,192,0,1,224,0,0,0,0,224,0,0,240,0,7,240,0,127,240,0,120,0,63,252,0,127,240,0,60,0,126,62,0,31,248,0,28,0,240,15,0,0,56,0,28,1,224,7,0,0,56,0,24,1,192,3,128,0,56,0,56,1,128,1,128,0,24,0,56,3,128,1,192,0,56,0,120,3,0,1,192,1,248,3,248,3,0,0,192,7,240,15,224,3,0,0,192,31,128,31,128,3,128,0,192,30,0,60,0,3,128,1,192,24,0,24,0,1,128,1,128,24,0,24,0,1,192,3,128,24,0,28,0,1,224,7,128,56,0,28,0,0,240,15,0,56,0,31,248,0,124,126,0,60,0,15,254,0,63,252,0,30,0,15,254,0,15,240,0,15,0,0,7,0,0,0,0,7,128,0,3,128,0,0,0,3,192,0,3,128,0,0,0,1,224,0,1,192,0,0,0,1,192,0,1,192,0,0,6,1,192,0,1,128,0,0,31,195,128,0,3,128,0,0,63,247,0,0,3,128,0,0,248,255,0,0,7,0,224,1,224,62,0,0,7,1,255,1,192,12,0,0,14,3,255,1,192,0,0,0,15,7,135,128,192,0,0,0,7,143,1,128,192,0,0,0,3,254,1,192,192,0,0,0,0,252,1,192,192,0,0,0,0,120,0,192,192,0,0,0,0,16,0,231,192,0,0,0,0,0,0,255,192,0,0,0,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,255,0,0,0,0,0,0,1,255,0,0,0,0,0,0,1,243,128,0,0,0,0,0,1,131,128,14,0,0,0,0,1,129,128,31,0,0,0,0,1,129,192,63,192,0,0,0,1,129,192,121,224,0,0,0,1,128,224,240,240,0,0,0,1,128,255,224,112,0,0,56,3,128,127,192,112,0,0,126,15,128,7,128,96,0,0,255,223,0,0,0,224,0,0,227,252,0,0,0,192,0,1,192,248,0,0,1,192,0,3,128,32,0,0,1,128,0,3,128,0,0,0,3,128,0,3,192,0,0,0,1,192,0,1,224,0,0,0,1,192,0,0,240,0,0,0,0,224,0,0,120,0,7,240,0,127,224,0,60,0,31,248,0,127,240,0,28,0,126,62,0,63,248,0,28,0,240,15,0,0,56,0,28,1,224,7,128,0,56,0,24,1,192,3,128,0,56,0,24,3,128,1,192,0,24,0,56,3,128,1,192,0,24,0,248,3,128,1,192,0,124,7,240,3,128,0,192,3,248,31,192,3,0,0,192,15,224,62,0,3,128,0,192,31,0,24,0,3,128,1,192,28,0,24,0,1,128,1,128,24,0,24,0,1,192,3,128,24,0,28,0,0,224,7,128,56,0,28,0,0,240,15,0,56,0,31,252,0,126,126,0,56,0,15,254,0,31,252,0,60,0,7,254,0,15,224,0,30,0,0,7,0,0,0,0,15,0,0,3,128,0,0,0,7,128,0,3,128,0,0,0,3,192,0,1,192,0,0,0,1,192,0,3,128,0,0,4,1,192,0,3,128,0,0,31,3,128,0,7,0,0,0,63,199,0,0,7,0,0,0,255,255,0,0,14,1,240,1,224,126,0,0,14,3,254,1,192,28,0,0,14,7,255,1,128,0,0,0,15,15,7,1,128,0,0,0,7,158,3,129,128,0,0,0,3,252,3,129,128,0,0,0,0,248,1,129,192,0,0,0,0,112,1,193,192,0,0,0,0,0,1,199,192,0,0,0,0,0,0,255,128,0,0,0,0,0,0,255,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,128,0,0,0,0,0,1,255,128,0,0,0,0,0,1,225,192,0,0,0,0,0,1,193,192,6,0,0,0,0,1,193,192,15,0,0,0,0,1,192,192,31,192,0,0,0,1,192,224,61,224,0,0,0,1,192,240,120,240,0,0,24,1,192,126,240,56,0,0,62,3,192,127,192,56,0,0,127,135,128,7,128,112,0,0,247,255,0,0,0,112,0,0,225,252,0,0,0,224,0,1,192,120,0,0,0,224,0,3,128,0,0,0,1,192,0,3,192,0,0,0,1,192,0,1,224,0,0,0,1,192,0,0,240,0,0,0,1,192,0,0,120,0,0,0,0,224,0,0,60,0,15,240,0,96,0,0,28,0,63,252,0,127,240,0,12,0,126,126,0,63,248,0,28,0,240,15,0,31,248,0,28,1,224,7,128,0,56,0,24,1,192,3,128,0,56,0,24,3,128,1,192,0,24,0,120,3,128,1,192,0,24,3,248,3,128,1,192,0,28,31,192,3,128,0,192,0,252,62,0,3,0,0,192,7,248,56,0,3,128,1,192,31,192,24,0,3,128,1,192,30,0,24,0,1,128,1,128,24,0,24,0,1,192,3,128,24,0,28,0,1,224,7,0,56,0,31,252,0,240,15,0,56,0,31,252,0,124,126,0,48,0,15,254,0,63,252,0,56,0,0,14,0,15,240,0,28,0,0,7,0,0,0,0,30,0,0,3,128,0,0,0,15,0,0,3,128,0,0,0,7,128,0,3,128,0,0,0,3,192,0,3,128,0,0,0,1,192,0,7,0,0,0,30,3,128,0,7,0,0,0,127,135,0,0,14,0,0,0,255,239,0,0,14,1,224,1,225,254,0,0,28,3,254,3,128,124,0,0,30,15,254,3,128,24,0,0,15,30,7,3,128,0,0,0,7,188,7,3,128,0,0,0,3,248,3,3,128,0,0,0,0,240,3,131,128,0,0,0,0,96,3,131,128,0,0,0,0,0,1,143,128,0,0,0,0,0,1,255,128,0,0,0,0,0,1,255,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,0,0,0,0,127,192,0,0,0,0,0,0,255,192,0,0,0,0,0,0,241,192,0,0,0,0,0,0,224,224,0,0,0,0,0,0,192,224,7,0,0,0,0,0,192,224,15,192,0,0,0,0,192,96,31,224,0,0,8,0,192,112,60,240,0,0,30,0,192,126,112,120,0,0,63,3,192,63,224,56,0,0,127,207,192,7,192,56,0,0,241,255,0,0,128,48,0,1,224,124,0,0,0,112,0,1,192,56,0,0,0,224,0,1,192,0,0,0,0,224,0,1,224,0,0,0,1,192,0,0,240,0,0,0,1,192,0,0,120,0,0,0,1,192,0,0,56,0,0,0,0,224,0,0,28,0,7,240,0,96,0,0,14,0,63,252,0,112,0,0,12,0,124,126,0,63,240,0,28,0,240,15,0,63,248,0,28,1,224,7,128,0,56,0,24,1,192,3,128,0,24,0,56,3,128,1,128,0,24,3,248,3,128,1,192,0,24,31,240,3,0,1,192,0,24,63,0,3,0,0,192,0,60,56,0,3,0,0,192,1,252,24,0,3,128,1,192,15,248,24,0,3,128,1,192,31,128,24,0,1,128,1,192,28,0,24,0,1,192,3,128,24,0,28,0,1,224,7,128,56,0,31,252,0,240,15,0,56,0,15,252,0,126,62,0,48,0,0,14,0,63,252,0,112,0,0,6,0,15,240,0,56,0,0,7,0,0,0,0,28,0,0,3,128,0,0,0,14,0,0,3,128,0,0,0,7,0,0,3,128,0,0,0,7,128,0,7,0,0,0,0,3,128,0,6,0,0,0,28,3,128,0,14,0,0,0,63,7,0,0,28,1,0,0,255,143,0,0,28,3,224,3,227,254,0,0,60,15,252,3,128,252,0,0,30,30,126,3,0,120,0,0,15,60,14,3,0,0,0,0,7,248,6,3,0,0,0,0,3,240,7,3,0,0,0,0,1,224,7,3,0,0,0,0,0,0,3,3,0,0,0,0,0,0,3,143,0,0,0,0,0,0,3,255,0,0,0,0,0,0,3,254,0,0,0,0,0,0,1,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,192,0,0,0,0,0,0,127,192,0,0,0,0,0,0,127,224,0,0,0,0,0,0,112,224,0,0,0,0,0,0,96,96,0,0,0,0,0,0,96,96,3,128,0,0,0,0,224,112,7,192,0,0,0,0,224,112,15,224,0,0,12,0,224,48,30,240,0,0,31,0,224,62,60,120,0,0,63,193,224,63,240,60,0,0,115,231,192,7,224,28,0,0,240,255,0,0,192,56,0,1,224,60,0,0,0,56,0,1,192,24,0,0,0,112,0,1,224,0,0,0,0,96,0,0,240,0,0,0,0,224,0,0,112,0,0,0,1,192,0,0,56,0,0,0,1,192,0,0,28,0,0,0,0,224,0,0,14,0,15,240,0,96,0,0,14,0,63,248,0,112,0,0,12,0,124,126,0,48,0,0,28,0,240,15,0,63,248,0,28,0,224,7,0,31,248,0,24,1,192,3,128,0,24,1,248,3,128,1,128,0,24,31,248,3,128,1,192,0,24,63,192,3,0,1,192,0,24,60,0,3,0,0,192,0,24,56,0,3,0,0,192,0,28,24,0,3,128,1,192,3,248,24,0,3,128,1,192,31,240,24,0,1,128,1,192,31,0,24,0,1,192,3,128,24,0,31,248,1,224,7,0,56,0,31,252,0,240,15,0,56,0,0,60,0,126,62,0,48,0,0,14,0,31,248,0,112,0,0,14,0,7,224,0,112,0,0,7,0,0,0,0,56,0,0,3,128,0,0,0,28,0,0,3,0,0,0,0,14,0,0,7,0,0,0,0,7,0,0,14,0,0,0,0,7,128,0,14,0,0,0,24,3,128,0,28,0,0,0,60,7,128,0,28,3,0,1,255,15,0,0,56,7,224,3,231,206,0,0,56,15,252,7,131,252,0,0,30,60,124,7,0,248,0,0,15,120,12,7,0,48,0,0,7,240,14,7,0,0,0,0,3,224,14,7,0,0,0,0,1,192,6,6,0,0,0,0,0,0,6,6,0,0,0,0,0,0,7,6,0,0,0,0,0,0,7,254,0,0,0,0,0,0,3,254,0,0,0,0,0,0,3,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,224,0,0,0,0,0,0,63,224,0,0,0,0,0,0,48,112,0,0,0,0,0,0,112,112,0,0,0,0,0,0,112,48,1,128,0,0,0,0,112,48,3,192,0,0,4,0,112,56,7,224,0,0,15,0,96,56,15,240,0,0,31,128,96,62,30,120,0,0,63,225,224,31,248,28,0,0,121,255,224,15,240,14,0,0,240,127,0,0,224,28,0,0,224,28,0,0,0,28,0,0,224,0,0,0,0,56,0,0,240,0,0,0,0,112,0,0,112,0,0,0,0,112,0,0,56,0,0,0,0,224,0,0,28,0,0,0,0,192,0,0,14,0,0,0,0,224,0,0,14,0,7,240,0,112,0,0,14,0,31,248,0,112,0,0,12,0,126,126,0,48,0,0,28,0,240,15,0,63,240,0,28,0,224,7,128,63,248,0,120,1,192,3,128,7,248,7,248,3,128,1,128,0,24,31,240,3,128,1,192,0,24,62,0,3,0,1,192,0,24,56,0,3,0,0,192,0,24,24,0,3,0,0,192,0,28,24,0,3,128,1,192,0,252,24,0,3,128,1,192,15,248,24,0,1,128,1,128,31,224,31,224,1,192,3,128,30,0,31,252,0,224,7,0,56,0,3,252,0,240,15,0,56,0,0,12,0,126,126,0,112,0,0,14,0,63,248,0,112,0,0,14,0,15,224,0,112,0,0,7,0,0,0,0,112,0,0,7,0,0,0,0,56,0,0,7,0,0,0,0,28,0,0,14,0,0,0,0,14,0,0,14,0,0,0,0,15,0,0,28,0,0,0,0,7,0,0,56,0,0,0,56,7,128,0,56,7,0,0,254,15,0,0,112,15,224,7,255,142,0,0,56,31,248,7,135,252,0,0,30,120,124,6,1,248,0,0,15,240,28,6,0,240,0,0,7,224,28,14,0,32,0,0,3,192,12,14,0,0,0,0,1,0,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,14,14,0,0,0,0,0,0,7,252,0,0,0,0,0,0,7,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,240,0,0,0,0,0,0,63,240,0,0,0,0,0,0,56,48,0,0,0,0,0,0,56,56,0,0,0,0,0,0,56,56,0,0,0,0,0,0,48,56,1,192,0,0,6,0,48,24,3,224,0,0,15,128,112,24,7,240,0,0,31,192,112,30,31,120,0,0,57,243,240,31,252,28,0,0,112,127,224,7,248,14,0,0,240,63,0,0,240,14,0,0,224,12,0,0,0,28,0,0,240,0,0,0,0,28,0,0,112,0,0,0,0,56,0,0,56,0,0,0,0,112,0,0,28,0,0,0,0,112,0,0,30,0,0,0,0,224,0,0,14,0,0,0,0,224,0,0,6,0,15,240,0,96,0,0,14,0,63,248,0,112,0,0,12,0,126,126,0,48,0,0,28,0,240,15,0,60,0,0,28,0,224,7,0,63,248,3,248,1,192,3,128,31,248,31,248,1,128,1,192,0,120,63,128,3,128,1,192,0,24,24,0,3,128,1,192,0,24,24,0,3,0,0,192,0,24,24,0,3,0,0,192,0,24,24,0,3,128,1,192,0,24,24,0,3,128,1,192,3,252,30,0,3,128,1,192,31,248,31,248,1,192,3,128,31,192,15,252,0,224,7,0,56,0,0,60,0,240,15,0,56,0,0,12,0,126,126,0,48,0,0,14,0,31,248,0,112,0,0,14,0,15,224,0,96,0,0,7,0,0,0,0,112,0,0,7,0,0,0,0,112,0,0,14,0,0,0,0,56,0,0,14,0,0,0,0,28,0,0,28,0,0,0,0,14,0,0,56,0,0,0,0,15,0,0,120,0,0,0,112,7,0,0,112,15,0,1,252,15,0,0,112,31,224,7,254,30,0,0,56,127,248,15,143,156,0,0,30,240,120,14,3,248,0,0,15,224,24,14,1,240,0,0,7,192,24,12,0,96,0,0,3,0,28,12,0,0,0,0,0,0,28,12,0,0,0,0,0,0,28,28,0,0,0,0,0,0,12,28,0,0,0,0,0,0,15,252,0,0,0,0,0,0,15,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

const byte PROGMEM frames2[][128] = {
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,32,0,0,1,248,0,0,1,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,1,248,0,0,2,0,0,0,6,0,31,128,12,0,48,192,24,0,32,64,48,0,96,127,224,0,32,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,4,0,0,0,6,0,0,0,3,248,0,0,3,12,0,0,2,4,0,0,2,4,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,3,96,6,0,6,0,31,128,12,0,48,192,24,0,32,64,48,0,32,127,224,0,32,127,224,0,48,64,48,0,24,192,24,0,15,128,8,0,0,0,12,0,0,0,6,0,0,0,3,240,0,0,3,8,0,0,2,4,0,0,6,4,0,0,6,4,0,0,2,4,0,0,3,8,0,0,1,240,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,7,128,6,0,12,192,12,0,16,96,24,0,16,32,48,0,48,63,224,0,16,63,224,0,16,96,48,0,12,192,24,0,7,128,8,0,0,0,12,0,0,0,6,224,0,0,3,240,0,0,6,24,0,0,4,8,0,0,4,12,0,0,4,12,0,0,6,8,0,0,3,24,0,0,1,224,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,1,220,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,6,0,0,3,4,0,0,3,156,7,192,6,240,12,96,4,0,24,48,8,0,16,16,16,0,16,31,224,0,24,51,224,0,8,32,48,0,7,192,16,0,1,0,8,0,0,0,12,0,0,0,7,224,0,0,6,48,0,0,12,24,0,0,8,24,0,0,8,8,0,0,8,24,0,0,4,16,0,0,7,112,0,0,1,192,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,1,156,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,6,1,192,3,4,7,112,3,216,4,16,6,240,8,24,12,0,8,8,24,0,8,31,224,0,12,24,224,0,6,48,48,0,3,224,16,0,0,0,8,0,0,0,13,0,0,0,7,192,0,0,8,32,0,0,24,48,0,0,16,16,0,0,16,16,0,0,24,48,0,0,12,96,0,0,7,192,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,0,1,156,0,0,3,4,0,0,2,6,0,0,2,6,1,240,2,6,3,24,3,4,6,12,7,156,4,4,12,240,4,4,24,0,6,15,240,0,2,8,96,0,1,240,48,0,0,64,16,0,0,0,24,0,0,0,15,128,0,0,24,192,0,0,48,96,0,0,32,32,0,0,32,32,0,0,48,96,0,0,16,64,0,0,29,192,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,1,248,0,0,3,4,0,120,2,4,1,220,2,6,1,6,2,6,3,2,3,4,2,2,7,140,3,2,24,240,1,7,240,0,1,140,96,0,0,120,48,0,0,0,16,0,0,0,28,0,0,0,63,0,0,0,32,128,0,0,64,192,0,0,64,192,0,0,64,192,0,0,96,128,0,0,49,128,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,1,248,0,126,1,12,0,195,2,4,0,129,2,6,0,129,2,6,0,129,7,4,0,129,31,12,0,195,240,248,0,124,96,0,0,0,32,0,0,0,48,0,0,0,62,0,0,0,67,0,0,0,129,0,0,0,129,0,0,0,129,128,0,0,129,0,0,0,195,0,0,0,126,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,49,128,248,0,96,129,140,0,64,195,4,0,64,194,6,0,64,130,6,0,97,142,4,0,63,251,12,0,12,97,248,0,0,32,96,0,0,120,0,0,1,204,0,0,1,6,0,0,3,2,0,0,3,2,0,0,3,2,0,0,1,6,0,0,1,204,0,0,0,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,29,192,0,0,16,96,0,0,48,32,240,0,32,33,216,0,48,35,4,0,16,98,6,0,24,194,6,0,7,254,6,0,0,99,4,0,0,97,140,0,3,240,240,0,2,8,0,0,6,12,0,0,4,4,0,0,4,12,0,0,6,12,0,0,3,24,0,0,1,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,7,224,0,0,12,48,0,0,8,16,0,0,8,16,0,0,8,16,0,0,8,16,248,0,12,49,12,0,7,226,4,0,0,126,6,0,0,126,6,0,7,226,4,0,12,49,12,0,8,16,248,0,8,16,0,0,8,16,0,0,8,16,0,0,12,48,0,0,7,224,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,240,0,0,3,24,0,0,6,12,0,0,4,12,0,0,4,4,0,0,6,12,0,0,2,8,0,0,3,240,240,0,0,97,140,0,0,99,4,0,7,254,6,0,24,198,6,0,16,98,6,0,48,35,4,0,32,33,216,0,48,32,240,0,16,96,0,0,29,192,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,1,204,0,0,1,6,0,0,3,2,0,0,3,2,0,0,3,2,0,0,1,6,0,0,1,204,0,0,0,120,0,0,0,32,96,0,12,97,248,0,63,251,12,0,97,142,4,0,64,130,6,0,64,194,6,0,64,195,4,0,96,129,140,0,49,128,248,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,126,0,0,0,195,0,0,0,129,0,0,0,129,128,0,0,129,0,0,0,129,0,0,0,67,0,0,0,62,0,0,0,16,0,0,0,32,0,0,124,96,0,0,195,240,248,0,129,29,12,0,129,7,4,0,129,2,6,0,129,2,6,0,195,2,4,0,126,1,12,0,0,1,248,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,49,128,0,0,96,128,0,0,64,192,0,0,64,192,0,0,64,192,0,0,32,128,0,0,63,0,0,0,28,0,0,0,16,0,0,120,48,0,1,140,96,0,1,7,240,0,3,2,24,240,2,2,15,140,3,2,3,4,1,6,2,6,1,220,2,6,0,120,2,4,0,0,3,4,0,0,1,248,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,29,192,0,0,16,64,0,0,48,96,0,0,32,32,0,0,32,32,0,0,48,96,0,0,24,192,0,0,15,128,0,0,8,0,0,64,16,0,1,240,48,0,2,8,224,0,6,15,224,0,4,4,24,0,4,4,12,240,6,12,7,156,3,24,3,4,1,240,2,6,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,156,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,192,0,0,12,96,0,0,24,48,0,0,16,16,0,0,16,16,0,0,24,48,0,0,8,32,0,0,7,192,0,0,13,0,0,0,8,0,3,224,24,0,6,48,48,0,12,24,224,0,8,31,224,0,8,8,16,0,8,24,8,0,4,16,4,240,7,112,3,220,1,192,3,4,0,0,2,6,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,156,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,192,0,0,7,112,0,0,4,16,0,0,8,24,0,0,8,8,0,0,8,24,0,0,12,24,0,0,6,48,0,0,7,224,0,0,4,0,1,0,8,0,7,192,24,0,8,32,48,0,24,51,224,0,16,31,224,0,16,16,48,0,24,48,24,0,12,96,12,0,7,192,6,240,0,0,3,156,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,216,0,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,224,0,0,3,24,0,0,6,8,0,0,4,12,0,0,4,12,0,0,4,8,0,0,6,24,0,0,3,240,0,0,7,224,0,0,4,0,7,128,12,0,12,192,24,0,16,96,48,0,16,63,224,0,48,63,224,0,16,32,48,0,16,96,24,0,28,192,12,0,7,128,6,0,0,0,3,248,0,0,3,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,1,240,0,0,3,8,0,0,2,4,0,0,6,4,0,0,6,4,0,0,2,4,0,0,3,8,0,0,3,240,0,0,2,0,0,0,4,0,15,128,12,0,24,192,24,0,48,64,48,0,32,127,224,0,32,127,224,0,32,64,48,0,48,192,24,0,31,128,12,0,6,0,4,0,0,0,2,96,0,0,3,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,0,248,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,4,0,0,2,4,0,0,1,12,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,32,127,224,0,96,127,224,0,32,64,48,0,48,192,24,0,31,128,8,0,0,0,4,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,1,12,0,0,1,248,0,0,0,32,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0},
  {0,0,0,0,0,0,0,96,0,0,1,248,0,0,3,12,0,0,2,4,0,0,2,6,0,0,2,6,0,0,3,4,0,0,1,140,0,0,3,248,0,0,2,0,0,0,4,0,31,0,12,0,48,128,24,0,32,64,48,0,96,127,224,0,96,127,224,0,32,64,48,0,48,128,24,0,31,0,8,0,0,0,12,0,0,0,6,0,0,0,3,248,0,0,1,140,0,0,3,4,0,0,2,6,0,0,2,6,0,0,2,4,0,0,3,12,0,0,1,248,0,0,0,96,0,0,0,0}
};

// 'mext-selected', 128x32px
const unsigned char epd_bitmap_mext_selected [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x03, 0x80, 0x00, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x07, 0xc0, 0x00, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x0f, 0xe0, 0x00, 0x10, 0x0f, 0xe0, 0x10, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x1f, 0xf0, 0x00, 0x10, 0x1f, 0xf0, 0x10, 0x0f, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x10, 0x3f, 0xf8, 0x10, 0x07, 0xff, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x10, 0x7f, 0xfc, 0x10, 0x03, 0xff, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x10, 0xff, 0xfe, 0x10, 0x01, 0xff, 0xc0, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x01, 0xff, 0xff, 0x00, 0x11, 0xff, 0xff, 0x10, 0x00, 0xff, 0x80, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x13, 0xff, 0xff, 0x90, 0x00, 0x7f, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x13, 0xff, 0xff, 0x90, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'pause-selected', 128x32px
const unsigned char epd_bitmap_pause_selected [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x00, 0x01, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x00, 0x03, 0x80, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x00, 0x07, 0xc0, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0xf8, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x07, 0xff, 0xf0, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x03, 0xff, 0xe0, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xc0, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x01, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0x80, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x00, 0x7f, 0x00, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x7f, 0xff, 0xf2, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x03, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'playnshit', 128x32px
const unsigned char epd_bitmap_playnshit [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x03, 0x80, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x07, 0xc0, 0x00, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x07, 0xff, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x03, 0xff, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xc0, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x01, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0x80, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x00, 0x7f, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'play-selected', 128x32px
const unsigned char epd_bitmap_play_selected [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x10, 0x01, 0x00, 0x10, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x10, 0x03, 0x80, 0x10, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x10, 0x07, 0xc0, 0x10, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x10, 0x0f, 0xe0, 0x10, 0x00, 0x0f, 0xe0, 0x00, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x10, 0x1f, 0xf0, 0x10, 0x00, 0x1f, 0xf0, 0x00, 0x0f, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x3f, 0xf8, 0x10, 0x00, 0x3f, 0xf8, 0x00, 0x07, 0xff, 0xf0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x7f, 0xfc, 0x10, 0x00, 0x7f, 0xfc, 0x00, 0x03, 0xff, 0xe0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0xff, 0xfe, 0x10, 0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xc0, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x11, 0xff, 0xff, 0x10, 0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0x80, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x13, 0xff, 0xff, 0x90, 0x03, 0xff, 0xff, 0x80, 0x00, 0x7f, 0x00, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x13, 0xff, 0xff, 0x90, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x13, 0xff, 0xff, 0x90, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x7f, 0xff, 0xf0, 0x13, 0xff, 0xff, 0x90, 0x03, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xfc, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'previous-selected', 128x32px
const unsigned char epd_bitmap_previous_selected [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x01, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x03, 0x80, 0x00, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x07, 0xc0, 0x00, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x8f, 0xff, 0xf8, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x87, 0xff, 0xf0, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x7f, 0xfc, 0x00, 0x83, 0xff, 0xe0, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x81, 0xff, 0xc0, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x01, 0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0x00, 0x80, 0xff, 0x80, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x80, 0x7f, 0x00, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x7f, 0xff, 0xf0, 0x03, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x80, 0x9f, 0xff, 0xfc, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 2640)
const int epd_bitmap_allArray_LEN = 5;
const unsigned char* epd_bitmap_allArray[5] = {
	epd_bitmap_mext_selected,
	epd_bitmap_pause_selected,
	epd_bitmap_play_selected,
	epd_bitmap_playnshit,
	epd_bitmap_previous_selected
};


// Crear una instancia de la pantalla
Adafruit_SSD1306 display1(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
Adafruit_SSD1306 display2(SCREEN_WIDTH, SCREEN_HEIGHT2, &Wire, -1);


//Crear instancia del knob
AiEsp32RotaryEncoder rotaryEncoder = AiEsp32RotaryEncoder(ROTARY_ENCODER_A_PIN, ROTARY_ENCODER_B_PIN, ROTARY_ENCODER_BUTTON_PIN, ROTARY_ENCODER_VCC_PIN, ROTARY_ENCODER_STEPS);


char ssid[] = "";         // your network SSID (name)
char password[] = ""; // your network password

// Clave de API de OpenWeatherMap
const char* apiKey = ""; // Reemplaza con tu clave de API de OpenWeatherMap
const char* weatherApiUrl = "";

// Spotify
char clientId[] = "";     // Your client ID of your spotify APP
char clientSecret[] = ""; // Your client Secret of your spotify APP (Do Not share this!)
#define SPOTIFY_MARKET "ES"
#define SPOTIFY_REFRESH_TOKEN ""

WiFiClientSecure client;
SpotifyArduino spotify(client, clientId, clientSecret, SPOTIFY_REFRESH_TOKEN);

unsigned long delayBetweenRequests = 60000; // Time between requests (1 minute)
unsigned long requestDueTime;               //time when request due

// Crear una instancia del cliente NTP
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", 3600 * 2, 60000); // Actualizar cada 60 segundos
int frame = 0;

// Definir M√°quina de Estados
StateMachine machine = StateMachine();

State* S0 = machine.addState(&state0); 
State* S1 = machine.addState(&state1);

//Definir variables
int act = 60;
float temp = 0.0;
float tempMin = 0.0;
float tempMax = 0.0;
int frameOffset = 0; // Variable para el desplazamiento del marco
bool direction = true; // Direcci√≥n del movimiento del marco
int actTime = 4;
int cambioEstado = 0;
String formattedTime = "Null";
bool wifiConnected = false;

String lastSong = "";
String lastSongUri = "";
String lastAlbum = "";
String lastArtist = "";
long progreso = 0;
long duracion = 0;

int textX_song = SCREEN_WIDTH;
int textX_album = SCREEN_WIDTH;
int textX_artist = SCREEN_WIDTH;

volatile int encoderValue = 0; // Valor del encoder
volatile int lastEncoded = 0;  // Estado anterior del encoder
volatile bool buttonPressed = false; // Estado del bot√≥n
volatile unsigned long lastDebounceTime = 0; // √öltima vez que se detect√≥ una pulsaci√≥n
const unsigned long debounceDelay = 50; // Tiempo de debounce en milisegundos
int lastEncoderRegister = 0;

int volumenActual = 0;
bool cambioVol = false;
int tiempoCheckvol = 0;

const int PAUSE_INDEX = 1;
const int PLAY_INDEX = 2;
const int NEXT_INDEX = 0;
const int PREVIOUS_INDEX = 4;
int currentGlyphIndex = PLAY_INDEX;  // Comenzamos en 'play-selected'

// Select I2C BUS
void TCA9548A(uint8_t bus) {
  Wire.beginTransmission(0x70);  // TCA9548A address
  Wire.write(1 << bus);          // send byte to select bus
  Wire.endTransmission();
  // Serial.print("Bus: ");
  // Serial.println(bus);
}

unsigned long lastDebounceTime1 = 0;
bool buttonPressed1 = false;

bool buttonTrue() {
  bool reading = digitalRead(25);
  if (reading != buttonPressed1) {
    lastDebounceTime1 = millis();
  }

  if (((millis() - lastDebounceTime1) > 100) && reading == true) {
    Serial.println((millis() - lastDebounceTime1));
    buttonPressed1 = reading; 
    Serial.println("Cambio de estado");
    cambioEstado = 1; // Marca el cambio de estado
    lastDebounceTime1 = millis();
    return true; 
    }
  
  cambioEstado = 0;
  buttonPressed1 = reading;
  return false; 
}

void simboloLateral(){
  TCA9548A(4);
  static int frame2 = 0;
  display2.clearDisplay();
  display2.drawBitmap(48, 0, frames2[frame2], FRAME_WIDTH2, FRAME_HEIGHT2, 1);
  display2.display();
  frame2 = (frame2 + 1) % FRAME_COUNT2;
  TCA9548A(7);
}

void mostrarSimboloCarga(){
      display1.clearDisplay();
      display1.drawBitmap(32, 0, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
      display1.display();
      frame = (frame + 1) % FRAME_COUNT;
      delay(42);
}

void mostrarMensajeError(){
    display1.clearDisplay();
    display1.setTextSize(1);
    display1.setTextColor(SSD1306_WHITE);
    display1.setCursor(0, 20);
    display1.println("Error: No se pudo conectar aL WIFI :(.");
    display1.display();
}

void moverMarco(){

    // Dibujar el marco de l√≠neas discontinuas en movimiento
    for (int i = 0; i < SCREEN_WIDTH; i += 4) {
        display1.drawPixel((i + frameOffset) % SCREEN_WIDTH, 0, SSD1306_WHITE); // Parte superior
        display1.drawPixel((i + frameOffset) % SCREEN_WIDTH, SCREEN_HEIGHT - 1, SSD1306_WHITE); // Parte inferior
    }
    for (int i = 0; i < SCREEN_HEIGHT; i += 4) {
        display1.drawPixel(0, (i + frameOffset) % SCREEN_HEIGHT, SSD1306_WHITE); // Izquierda
        display1.drawPixel(SCREEN_WIDTH - 1, (i + frameOffset) % SCREEN_HEIGHT, SSD1306_WHITE); // Derecha
    }

    // Actualizar la pantalla para mostrar el nuevo contenido
    display1.display();

    // Actualizar el desplazamiento del marco
    frameOffset = (frameOffset + 1) % 4;
}

String generateProgressBar(int segments) {
  String progressBar = " |";
  for (int i = 0; i < 6; i++) {
    if (i < segments) {
      progressBar += "="; // Mostrar el segmento lleno
    } else {
      progressBar += "-"; // Mostrar el segmento vac√≠o
    }
  }
  progressBar += "| ";
  return progressBar;
}

void setSpot() {
  playSpot();
  pauseSpot();
  nextTrackSpot();
  previousTrackSpot();
  display1.clearDisplay();
  int16_t x1, y1;
  uint16_t w, h;
  // Mostrar la canci√≥n
  String Cancion = String(removeTildes(lastSong));
  display1.getTextBounds(Cancion, 0, 0, &x1, &y1, &w, &h);
  if (w > SCREEN_WIDTH - 4) {
    display1.setTextWrap(false);
    display1.setCursor(textX_song , 10);
    textX_song -= 1;
    if (textX_song < -(w + w/2)) {
      textX_song = SCREEN_WIDTH;
    }
  } else {
    display1.setTextWrap(true);
    display1.setCursor((SCREEN_WIDTH - w) / 2, 10);
  }
  display1.print(Cancion);

  // Mostrar el artista
  String Cantante = String(removeTildes(lastArtist));
  display1.getTextBounds(Cantante, 0, 0, &x1, &y1, &w, &h);
  if (w > SCREEN_WIDTH - 4) {
    display1.setTextWrap(false);
    display1.setCursor(textX_artist, 22);
    textX_artist -= 1;
    if (textX_artist < -(w + w/2)) {
      textX_artist = SCREEN_WIDTH;
    }
  } else {
    display1.setTextWrap(true);
    display1.setCursor((SCREEN_WIDTH - w) / 2, 22);
  }
  display1.print(Cantante);

  // Mostrar el √°lbum
  String Album = String(removeTildes(lastAlbum));
  display1.getTextBounds(Album, 0, 0, &x1, &y1, &w, &h);
  if (w > SCREEN_WIDTH - 4) {
    display1.setTextWrap(false);
    display1.setCursor(textX_album, 34);
    textX_album -= 1;
    if (textX_album < -(w + w/2)) {
      textX_album = SCREEN_WIDTH;
    }
  } else {
    display1.setTextWrap(true);
    display1.setCursor((SCREEN_WIDTH - w) / 2, 34);
  }
  display1.print(Album);

  // Mostrar tiempo
  int numerosegmentos = map(progreso, 0, duracion, 0, 6);
  String progressBar = convertMsToMMSS(progreso) + generateProgressBar(numerosegmentos) + convertMsToMMSS(duracion);
  display1.getTextBounds(progressBar, 0, 0, &x1, &y1, &w, &h);
  display1.setTextWrap(true);
  display1.setCursor((SCREEN_WIDTH - w) / 2, 50);
  display1.print(progressBar);

  // 
  display1.setTextWrap(true);
}

void printCurrentlyPlayingToSerial(CurrentlyPlaying currentlyPlaying){

    if (currentlyPlaying.isPlaying && currentlyPlaying.trackName != lastSong){
      lastSong = currentlyPlaying.trackName;
      lastArtist = currentlyPlaying.artists[0].artistName;
      lastAlbum = currentlyPlaying.albumName;
      duracion = currentlyPlaying.durationMs;
    }
    if (currentlyPlaying.isPlaying){
      progreso = currentlyPlaying.progressMs;
    }
    else if (!currentlyPlaying.isPlaying){
    lastSong = "";
    lastArtist = "Nada en PLAY :)";
    lastAlbum = "";
    duracion = 0;
    progreso = 0;
    }

}

void printPlayerDetailsToSerial(PlayerDetails playerDetails){
  volumenActual = playerDetails.device.volumePercent;
}

String convertMsToMMSS(unsigned long milliseconds) {
  unsigned long totalSeconds = milliseconds / 1000;
  unsigned int minutes = totalSeconds / 60;
  unsigned int seconds = totalSeconds % 60;

  String formattedTime = "";
  if (minutes < 10) formattedTime += "0";
  formattedTime += String(minutes) + ":";
  if (seconds < 10) formattedTime += "0";
  formattedTime += String(seconds);

  return formattedTime;
}

String removeTildes(String text) {
  text.replace("√°", "a");
  text.replace("√©", "e");
  text.replace("√≠", "i");
  text.replace("√±", "n");
  text.replace("√≥", "o");
  text.replace("√∫", "u");
  text.replace("√Å", "A");
  text.replace("√â", "E");
  text.replace("√ç", "I");
  text.replace("√ì", "O");
  text.replace("√ö", "U");
  return text;
}

void IRAM_ATTR handleEncoderInterrupt() {
  int MSB = digitalRead(ROTARY_ENCODER_A_PIN); // MSB = most significant bit
  int LSB = digitalRead(ROTARY_ENCODER_B_PIN); // LSB = least significant bit

  int encoded = (MSB << 1) | LSB; // Construir un valor entero a partir de los bits A y B
  int sum = (lastEncoded << 2) | encoded; // Crear un valor combinando el estado anterior y el actual

  // Determinar la direcci√≥n del giro
  if (sum == 0b1101 || sum == 0b0100 || sum == 0b0010 || sum == 0b1011) encoderValue++;
  if (sum == 0b1110 || sum == 0b0111 || sum == 0b0001 || sum == 0b1000) encoderValue--;

  lastEncoded = encoded; // Actualizar el estado anterior con el actual
  cambioVol = true;
}

void IRAM_ATTR handleButtonInterrupt() {
  unsigned long currentTime = millis();
  // Verificar si el tiempo desde la √∫ltima pulsaci√≥n es suficiente para considerar un debounce
  if ((currentTime - lastDebounceTime) > debounceDelay) {
    buttonPressed = true;
    lastDebounceTime = currentTime;
  }
}

void previousTrackSpot(){
  if(buttonPressed && currentGlyphIndex == 4){
    spotify.previousTrack();
    spotify.getCurrentlyPlaying(printCurrentlyPlayingToSerial, SPOTIFY_MARKET);
    buttonPressed = false;
  }
}

void nextTrackSpot(){
  if(buttonPressed && currentGlyphIndex == 0){
    spotify.nextTrack();
    spotify.getCurrentlyPlaying(printCurrentlyPlayingToSerial, SPOTIFY_MARKET);
    buttonPressed = false;
  }
}

void pauseSpot(){
  if(buttonPressed && currentGlyphIndex == 1){
    spotify.pause();
    spotify.getCurrentlyPlaying(printCurrentlyPlayingToSerial, SPOTIFY_MARKET);
    buttonPressed = false;
  }
}

void playSpot(){
  if(buttonPressed && currentGlyphIndex == 2){
    spotify.play();
    spotify.getCurrentlyPlaying(printCurrentlyPlayingToSerial, SPOTIFY_MARKET);
    buttonPressed = false;
  }
}

void setVolumeSpot(){

  if (lastEncoderRegister > encoderValue && ((volumenActual - 5) >= 0)){
    volumenActual -= 5;
    spotify.setVolume(volumenActual);
    lastEncoderRegister = encoderValue;
    cambioVol = false;
  }
  else if (lastEncoderRegister < encoderValue && ((volumenActual + 5) <= 100)){
    volumenActual += 5;
    spotify.setVolume(volumenActual);
    lastEncoderRegister = encoderValue;
    cambioVol = false;
  }
  else if(lastEncoderRegister < encoderValue && (volumenActual + 5) > 100 && volumenActual != 100){
    volumenActual = 100;
    spotify.setVolume(volumenActual);
    lastEncoderRegister = encoderValue;
    cambioVol = false;
  }
  else if( lastEncoderRegister > encoderValue && (volumenActual - 5) < 0 && volumenActual != 0){
    volumenActual = 0;
    spotify.setVolume(volumenActual);
    lastEncoderRegister = encoderValue;
    cambioVol = false;
  }
  cambioVol = false;

}

void secondStatePantalla2(){
  if (encoderValue > lastEncoderRegister + 3) {
        TCA9548A(4);
        display2.clearDisplay();
        // Mover hacia adelante
        switch (currentGlyphIndex) {
            case PAUSE_INDEX:
                currentGlyphIndex = PLAY_INDEX;
                break;
            case PLAY_INDEX:
                currentGlyphIndex = NEXT_INDEX;
                break;
            case NEXT_INDEX:
                currentGlyphIndex = PREVIOUS_INDEX;
                break;
            case PREVIOUS_INDEX:
                currentGlyphIndex = PAUSE_INDEX;
                break;
        }
        lastEncoderRegister = encoderValue;
        mostrarBitmap(currentGlyphIndex);
    } else if (encoderValue < lastEncoderRegister - 3) {
        // Mover hacia atr√°s
        TCA9548A(4);
        display2.clearDisplay();
        switch (currentGlyphIndex) {
            case PAUSE_INDEX:
                currentGlyphIndex = PREVIOUS_INDEX;
                break;
            case PLAY_INDEX:
                currentGlyphIndex = PAUSE_INDEX;
                break;
            case NEXT_INDEX:
                currentGlyphIndex = PLAY_INDEX;
                break;
            case PREVIOUS_INDEX:
                currentGlyphIndex = NEXT_INDEX;
                break;
        }
        lastEncoderRegister = encoderValue;
        mostrarBitmap(currentGlyphIndex);
    }

    TCA9548A(7);
}

void mostrarBitmap(int index) {
    display2.clearDisplay();
    display2.drawBitmap(0, 0, epd_bitmap_allArray[index], SCREEN_WIDTH, SCREEN_HEIGHT2, SSD1306_WHITE);
    display2.display();
    Serial.print("Mostrar bitmap √≠ndice: ");
    Serial.println(index);
}

void state0(){

    static int tiempoLat = 0;
    static int tiempoS0 = 0;
    cambioVol = false;

    if (millis() - tiempoLat > 20 ){
      simboloLateral();
      tiempoLat = millis();
    }  

    if (millis() - tiempoS0 > 250 ){
      //Serial.println(encoderValue);
      if (actTime == 4 || cambioEstado == 1){
          // Obtener la hora actual del servidor NTP
          buttonPressed = 0;
          timeClient.update();
          formattedTime = timeClient.getFormattedTime();
          actTime = 0;
      }
      // Limpiar la pantalla
      display1.clearDisplay();

      if ((WiFi.status() == WL_CONNECTED) && act >= 60) { // Verificar conexi√≥n WiFi
          temp = 0;
          HTTPClient http;
          http.begin(weatherApiUrl); // Especificar URL
          int httpCode = http.GET(); // Hacer solicitud GET

          if (httpCode > 0) { // Verificar el c√≥digo de estado HTTP
              String payload = http.getString();
              Serial.println(payload); // Imprimir carga √∫til de la respuesta

              // Parsear JSON
              DynamicJsonDocument doc(1024);
              deserializeJson(doc, payload);

              temp = doc["main"]["temp"];
              tempMin = doc["main"]["temp_min"];
              tempMax = doc["main"]["temp_max"];
          }

          http.end(); // Cerrar conexi√≥n
          act = 0;
      }

      // Dibujar el marco de l√≠neas discontinuas en movimiento
      for (int i = 0; i < SCREEN_WIDTH; i += 4) {
          display1.drawPixel((i + frameOffset) % SCREEN_WIDTH, 0, SSD1306_WHITE); // Parte superior
          display1.drawPixel((i + frameOffset) % SCREEN_WIDTH, SCREEN_HEIGHT - 1, SSD1306_WHITE); // Parte inferior
      }
      for (int i = 0; i < SCREEN_HEIGHT; i += 4) {
          display1.drawPixel(0, (i + frameOffset) % SCREEN_HEIGHT, SSD1306_WHITE); // Izquierda
          display1.drawPixel(SCREEN_WIDTH - 1, (i + frameOffset) % SCREEN_HEIGHT, SSD1306_WHITE); // Derecha
      }

      // Configurar el tama√±o y color del texto
      display1.setTextSize(1);
      display1.setTextColor(SSD1306_WHITE);

      // Calcular las posiciones centradas
      int16_t x1, y1;
      uint16_t w, h;

      // Mostrar la hora centrada
      String timeText = formattedTime;
      display1.getTextBounds(timeText, 0, 0, &x1, &y1, &w, &h);
      display1.setCursor((SCREEN_WIDTH - w - 4 ) / 2, 8);
      display1.println(timeText);

      // Mostrar la temperatura actual centrada
      String tempText = "Temp: " + String(temp) + " C";
      display1.getTextBounds(tempText, 0, 0, &x1, &y1, &w, &h);
      display1.setCursor((SCREEN_WIDTH - w - 4 ) / 2, 22);
      display1.println(tempText);

      // Mostrar la temperatura m√°xima centrada
      String maxText = "Max:  " + String(tempMax) + " C";
      display1.getTextBounds(maxText, 0, 0, &x1, &y1, &w, &h);
      display1.setCursor((SCREEN_WIDTH - w - 4 ) / 2, 34);
      display1.println(maxText);

      // Mostrar la temperatura m√≠nima centrada
      String minText = "Min:  " + String(tempMin) + " C";
      display1.getTextBounds(minText, 0, 0, &x1, &y1, &w, &h);
      display1.setCursor((SCREEN_WIDTH - w - 4 ) / 2, 46);
      display1.println(minText);

      // Actualizar la pantalla para mostrar el nuevo contenido
      display1.display();

      // Actualizar el desplazamiento del marco
      frameOffset = (frameOffset + 1) % 4;

      // Esperar un segundo antes de la siguiente actualizaci√≥n
      act += 1;
      actTime += 1;

      // Serial.println(encoderValue);
      // if (buttonPressed){
      //   Serial.println(buttonPressed);
      //   buttonPressed = false;
      // }
      tiempoS0 = millis();
    }
}

void state1(){
  static int tiempoestado1 = 0;
  static int tiempopantalla = 0;
  static int tiempoScroll = 0;
  static int tiempoGiro = 0;

  if(cambioEstado == 1){
    TCA9548A(4);
    mostrarBitmap(currentGlyphIndex);
    cambioEstado = 0;
    TCA9548A(7);
  }
  if(cambioVol && (millis() - tiempoGiro > 100)){
    secondStatePantalla2();
    tiempoGiro = millis();
    cambioVol = false;
  }
  

  if (millis() - tiempoCheckvol > 300000){ // Cada 5 mins checkea el volumen
      // Serial.print("Obteniendo estado de Play");
      spotify.getPlayerDetails(printPlayerDetailsToSerial, SPOTIFY_MARKET);    
      tiempoCheckvol = millis();
  }

  // if(cambioVol){
  //   if (volumenActual != 100 || volumenActual != 0){
  //     setVolumeSpot();
  //   }
  //   else{
  //     cambioVol = false;
  //   }
  // }

  if (millis() - tiempoestado1 > 5000 || tiempoestado1 == 0){
    int status = spotify.getCurrentlyPlaying(printCurrentlyPlayingToSerial, SPOTIFY_MARKET);
    if (status == 200){
        Serial.println("Successfully got currently playing");
    }
    else if (status == 204){
        Serial.println("Doesn't seem to be anything playing");
        lastArtist = "Nada en PLAY :)";
    }
    else{
        Serial.print("Error: ");
        Serial.println(status);
    }
    tiempoestado1 = millis();
  }

  if (millis() - tiempoScroll > 50 || tiempoScroll == 0){
    // Serial.println("Actualizando pantalla");
    setSpot();
    tiempoScroll = millis();
  }
  if(millis() - tiempopantalla > 250 || tiempopantalla == 0 ){
    // Serial.println("Moviendo Marco");
    moverMarco();
    tiempopantalla = millis();
  }

  
}

void setup() {
    Serial.begin(115200);

    // Definir transiciones
    S0->addTransition(&buttonTrue, S1);
    S1->addTransition(&buttonTrue, S0);

    // Bot√≥n cambio de Estado
    pinMode(25, INPUT_PULLDOWN);

    // Inicializar la comunicaci√≥n I2C con los pines SDA y SCL
    Wire.begin(OLED_SDA, OLED_SCL);
    
    pinMode(ROTARY_ENCODER_A_PIN, INPUT);
    pinMode(ROTARY_ENCODER_B_PIN, INPUT);
    pinMode(ROTARY_ENCODER_BUTTON_PIN, INPUT_PULLUP);

    attachInterrupt(digitalPinToInterrupt(ROTARY_ENCODER_A_PIN), handleEncoderInterrupt, CHANGE);
    attachInterrupt(digitalPinToInterrupt(ROTARY_ENCODER_B_PIN), handleEncoderInterrupt, CHANGE);
    attachInterrupt(digitalPinToInterrupt(ROTARY_ENCODER_BUTTON_PIN), handleButtonInterrupt, FALLING);

    TCA9548A(4);
    if(!display2.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // No continuar si la pantalla no se inicializa
    }

    display2.clearDisplay();
    display2.display();

    TCA9548A(7);
    // Inicializar la pantalla con la direcci√≥n I2C (0x3C es una direcci√≥n com√∫n para estas pantallas)
    if(!display1.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { 
        Serial.println(F("SSD1306 allocation failed"));
        for(;;); // No continuar si la pantalla no se inicializa
    }

    display1.clearDisplay();
    display1.display();

    // Conectar a la red WiFi
    Serial.print("Connecting to WiFi...");
    WiFi.mode(WIFI_STA);
    WiFi.begin(ssid, password);
    unsigned long startAttemptTime = millis();


    while (WiFi.status() != WL_CONNECTED && millis() - startAttemptTime < 60000) { // Esperar hasta 1 minuto
        mostrarSimboloCarga();
        Serial.print(".");
    }

    if (WiFi.status() != WL_CONNECTED) {
        Serial.println(" failed.");
        mostrarMensajeError();
        while (true); // Detener ejecuci√≥n si no se puede conectar a WiFi
    } else {
        Serial.println(" connected.");
        wifiConnected = true;
        Serial.print("IP address: ");
        Serial.println(WiFi.localIP());
        frame = 0;
    }

    client.setCACert(spotify_server_cert);

    // Iniciar el cliente NTP
    timeClient.begin();

    Serial.println("Refreshing Access Tokens");
    if (!spotify.refreshAccessToken())
    {
        Serial.println("Failed to get access tokens");
    }

    spotify.getPlayerDetails(printPlayerDetailsToSerial, SPOTIFY_MARKET);
    tiempoCheckvol = millis();
}

void loop() {
  machine.run();
}